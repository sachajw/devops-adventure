# For PVC template purpose
appName: pgadmin
capability: abs
oauth_enabled: "True"
oauth2_allowed_teams: "absazp-devops absazp-pgadmin-users  absazp-tools-team"


# For creating a pvc 
persistanceStorage:
  size: 25Gi
  accessMode: "ReadWriteOnce"

# For sourcing Generic chart values
acmgeneric:
  stage: test
  imageOverride: abs/pgadmin
  imageVersion: 2022.0503.171248
  memoryRequest: 1.3G
  memoryLimit: 2G
  replicas: 1
  persistence:
    stateful: true
  istio:
    hosts:
    - hostname: abs-nonprod-pgadmin.acmcloud.srv.allianz  

  # when you want to set first admin credential saved as vault secret. We prefer this.
  # Make sure all prerequistes for vault onboadring of application  - 
  # as per confluence (https://cmp.allianz.net/display/ACMCLOUD/Continuous+Delivery+-+Secrets+-+Vault+Setup)is satisfied before deploying.
  # or ask us with PR :-)
  vault:
    enabled: true
    secrets:
    - name: pgadmin
      keys:
      - key: SETUP_EMAIL
        envvarName: PGADMIN_SETUP_EMAIL
      - key: SETUP_PASSWORD
        envvarName: PGADMIN_SETUP_PASSWORD
    # Needed only if you are planning to set github oauth
    - name: pgadmin-github-oauth
      keys:
      - key: OAUTH2_CLIENT_ID
        envvarName: OAUTH2_CLIENT_ID
      - key: OAUTH2_CLIENT_SECRET
        envvarName: OAUTH2_CLIENT_SECRET



# pvc mount, adopt to your capability name when deploy
  mount:
    volumeMounts:
      - name:  abs-pgadmin-data
        mountPath: "/var/lib/pgadmin"
        readOnly: false
    volumes:
      - name: abs-pgadmin-data
        persistentVolumeClaim:
          claimName: abs-pgadmin-data

# Needed for smooth deployment in pvc mounting deployments
  updateStrategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
